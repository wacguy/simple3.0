f=c(b,d)
plot(e,f)
?glm
fitting=glm(f~e)
fitting
summary(fitting)
install.packages("ResourceSelection")
library(ResourceSelection)
?hoslem.test
mtcars
hoslem.test(f, fitted(fitting))
lm(f~e)
summarY(lm(f~e))
summary(lm(f~e))
plot(e,f)
abline(lm(f~e))
plot(e,f)
abline(lm(f~e), col='red', lwd=2, lty=2)
fitting=lm(f~e)
summary(fitting)
fitting=lm(f~e)
plot(e,f)
abline(fitting, col='red', lwd=2, lty=2)
summary(fitting)
setwd("/Users/guywachsman/Guy/EMS1/pipeline/kevin")#
# mntn=read.table("/Users/guywachsman/Guy/EMS1/pipeline/kevin/EMS.plot4.txt", header=T, sep = "\t")
cnds=read.table("/Users/guywachsman/Guy/EMS1/pipeline/kevin/EMS.cands4.txt", header =T, sep = "\t")
library("ggplot2")#
library("ggrepel")#
library("reshape2")
mntn=mntn[(mntn$chr=="NA")|(mntn$pos=="NA")|(mntn$ref=="NA")|(mntn$alt=="NA")|(mntn$mut.ref=="NA")|(mntn$mut.alt=="NA")|(mntn$wt.ref=="NA")|(mntn$wt.alt=="NA"),]
setwd("/Users/guywachsman/Guy/EMS1/pipeline/kevin")
mntn=read.table("/Users/guywachsman/Guy/EMS1/pipeline/kevin/EMS.plot4.txt", header=T, sep = "\t")
cnds=read.table("/Users/guywachsman/Guy/EMS1/pipeline/kevin/EMS.cands4.txt", header =T, sep = "\t")
library("ggplot2")#
library("ggrepel")#
library("reshape2")
mntn=mntn[(mntn$chr=="NA")|(mntn$pos=="NA")|(mntn$ref=="NA")|(mntn$alt=="NA")|(mntn$mut.ref=="NA")|(mntn$mut.alt=="NA")|(mntn$wt.ref=="NA")|(mntn$wt.alt=="NA"),]
mntn1=droplevels(mntn[(mntn$chr!="Mt")|(mntn$chr!="Pt"),])
mntn[(mntn$mut.alt=="NA"),]
mntn=mntn[(mntn$chr!="NA")|(mntn$pos!="NA")|(mntn$ref!="NA")|(mntn$alt!="NA")|(mntn$mut.ref!="NA")|(mntn$mut.alt!="NA")|(mntn$wt.ref!="NA")|(mntn$wt.alt!="NA"),]
mntn[(mntn$mut.alt=="NA"),]
mntn=read.table("/Users/guywachsman/Guy/EMS1/pipeline/kevin/EMS.plot4.txt", header=T, sep = "\t")
mntn[is.na(mntn$mut.alt), ]
mntn[is.na(mntn$wt.alt), ]
mntn[is.na(mntn$wt.ref), ]
mntn[is.na(mntn$wt.alt), ]
mntn[is.na(mntn$wt.ref), ]
mntn=mntn[!is.na(mntn$wt.alt),]
mntn[!is.na(mntn$wt.ref),]
mntn[is.na(mntn$wt.ref),]
mntn=mntn[!is.na(mntn$wt.alt),]
mntn1=droplevels(mntn[(mntn$chr!="Mt")|(mntn$chr!="Pt"),])
wt=mntn1$wt.ref/(mntn1$wt.ref+mntn1$wt.alt)
mut=mntn1$mut.ref/(mntn1$mut.ref+mntn1$mut.alt)
mntn[is.na(mntn$wt.alt),]
mntn[is.na(mntn$mut.alt),]
mntn[is.na(mntn$mut.ref),]
mntn[is.na(mntn$chr),]
mntn[is.na(mntn$pos),]
mntn[is.na(mntn$ref),]
mntn[is.na(mntn$alt),]
mntn[is.na(mntn$mutation_effect),]
mntn[is.na(mntn$mut.alt),]
mntn[is.na(mntn$mut.ref),]
?grep
head(mntn)
tail(mntn)
mntn[!is.na(mntn$mut.ref),]
?grep
mntn.d=mntn[grep("[[:digit:]]", mnt2$mut.alt), ]
mntn.d=mntn[grep("[[:digit:]]", mntn$mut.alt), ]
mntn1=droplevels(mntn.d[(mntn.d$chr!="Mt")|(mntn.d$chr!="Pt"),])
wt=mntn1$wt.ref/(mntn1$wt.ref+mntn1$wt.alt)
mut=mntn1$mut.ref/(mntn1$mut.ref+mntn1$mut.alt)
mntn.d[is.na(mntn$mut.ref),]
?mntn=read.table
?read.table
?read.table
mntn=read.table("/Users/guywachsman/Guy/EMS1/pipeline/kevin/EMS.plot4.txt", header=T, sep = "\t", na.strings = "NA")
mntn1=droplevels(mntn[(mntn$chr!="Mt")|(mntn$chr!="Pt"),])
wt=mntn1$wt.ref/(mntn1$wt.ref+mntn1$wt.alt)
mut=mntn1$mut.ref/(mntn1$mut.ref+mntn1$mut.alt)
mntn.d=mntn[grep("[[:digit:]]", mntn$mut.alt), ]
mut=mntn1$mut.ref/(mntn1$mut.ref+mntn1$mut.alt)
mntn=read.table("/Users/guywachsman/Guy/EMS1/pipeline/kevin/EMS.plot4.txt", header=T, sep = "\t", na.strings = "NA")
mntn=mntn[!is.na(mntn$wt.alt),]
mntn1=mntn[!is.na(mntn$wt.alt),]
mntn=read.table("/Users/guywachsman/Guy/EMS1/pipeline/kevin/EMS.plot4.txt", header=T, sep = "\t", na.strings = "NA")
mntn1=mntn[!is.na(mntn$wt.alt),]
wt=mntn1$wt.ref/(mntn1$wt.ref+mntn1$wt.alt)
mut=mntn1$mut.ref/(mntn1$mut.ref+mntn1$mut.alt)
mntn1=mntn[is.na(mntn$wt.alt),]
typeof(wt.ref)
typeof(mntn1$wt.ref)
typeof(mntn1$mut.ref)
class(mntn1$mut.ref)
class(mntn1$wt.ref)
mntn=read.table("/Users/guywachsman/Guy/EMS1/pipeline/kevin/EMS.plot4.txt", header=T, sep = "\t")
mntn1=droplevels(mntn[(mntn$chr!="Mt")|(mntn$chr!="Pt"),])
mntn=read.table("/Users/guywachsman/Guy/EMS1/pipeline/kevin/EMS.plot4.txt", header=T, sep = "\t")
mntn[is.na(mntn$mut.ref),]
mntn[is.na(mntn$mut.alt),]
mntn[is.na(mntn$wt.alt),]
mntn=read.table("/Users/guywachsman/Guy/EMS1/pipeline/kevin/EMS.plot4.txt", header=T, sep = "\t")
mntn[is.na(mntn$mut.ref),]
mntn[is.na(mntn$mut.alt),]
mntn[is.na(mntn$wt.alt),]
mntn[is.na(mntn$wt.ref),]
mntn_new=mntn[!is.na(mntn$mut.alt)|!is.na(mntn$wt.alt),]
mntn_new[is.na(mntn_new$wt.ref),]
mut= mntn_new$mut.ref/(mntn_new$mut.ref+ mntn_new$mut.alt)
mntn_new[is.na(mntn_new$wt.alt),]
mntn_new[is.na(mntn_new$mut.alt),]
mntn[is.na(mntn$mut.alt),]
mntn_new[is.na(mntn_new$mut.alt),]
mntn_new[is.na(mntn_new$chr),]
mntn_new1=droplevels(mntn_new)
mut= mntn_new1$mut.ref/(mntn_new1$mut.ref+ mntn_new1$mut.alt)
?grep
mntn_new[!grep("[[:digit:]]", mntn$mut.alt),]
mntn_new[grep("[[:digit:]]", mntn$mut.alt),]
mntn_new[grep("[[:digit:]]", mntn$mut.alt, invert=T),]
mntn[is.na(mntn$mut.alt),]
mntn=read.table("/Users/guywachsman/Guy/EMS1/pipeline/kevin/EMS.plot4.txt", header=T, sep = "\t")
mntn[is.na(mntn$mut.alt),]
?loess
setwd("/Users/guywachsman/Guy/EMS1/pipeline/M2_300")#
mntn=read.delim("/Users/guywachsman/Guy/EMS1/pipeline/M2_300/M2_300.plot4.txt", header=T)#
cnds=read.delim("/Users/guywachsman/Guy/EMS1/pipeline/M2_300/M2_300.cands4.txt", header =T, sep = "\t")#
#
mntn1=droplevels(mntn[(mntn$chr!="Mt")|(mntn$chr!="Pt"),])#
#mntn1=droplevels(mntn[((mntn$ref=="C"&mntn$alt=="T")|(mntn$ref=="G"&mntn$alt=="A"))&(mntn$chr!="Mt")&(mntn$chr!="Pt"),])#
#
# tbl1[tbl1[,1]=="AT3G28550",]#
# head(mntn)#
#
wt=mntn1$wt.ref/(mntn1$wt.ref+mntn1$wt.alt)#
mut=mntn1$mut.ref/(mntn1$mut.ref+mntn1$mut.alt)#
ratio=wt-mut#
#
tbl1=data.frame(At_num=mntn1$At_num, gene=mntn1$gene, chr=mntn1$chr, pos=mntn1$pos, mut.ref=mntn1$mut.ref, mut.alt=mntn1$mut.alt, wt.ref=mntn1$wt.ref, wt.alt=mntn1$wt.alt, mut.ratio=mut, wt.ratio=wt, ratio)#
tbl1=tbl1[complete.cases(tbl1),]
breaks=seq(0, max(tbl1$pos), round(max(tbl1$pos)/3, digits=-7))#
#
##########################################################################
#separated chromosomes original data; after filtering (tbl2)-LOESS fitted#
#removing ratios below 0.1#
##########################################################################
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.3),]
dim(tbl2)
tbl2=tbl1[(tbl1[,11]>0.1),]
dim(tbl2)
head(tbl2)
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.3),]#
#
head(tbl2)#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl1=tbl1[complete.cases(tbl1),]
breaks=seq(0, max(tbl1$pos), round(max(tbl1$pos)/3, digits=-7))
tbl2=tbl1[(tbl1[,11]>0.1),]
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.3),]
t2_s=split(tbl2, tbl2$chr)
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
tbl2=tbl1[(tbl1[,11]>0.2),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
tbl2=tbl1[(tbl1[,11]>0.05),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.1)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.5)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
?loess
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
tbl3.m=melt(tbl3, id.vars=c('At_num', 'gene', 'chr', 'pos', 'mut.ref', 'mut.alt', 'wt.ref', 'wt.alt', 'ratio', 'fitted'))#
#
tbl3.cands.m=melt(tbl3.cands, id.vars=c('At_num', 'gene', 'chr', 'pos', 'mut.ref', 'mut.alt', 'wt.ref', 'wt.alt', 'ratio', 'fitted'))#
x11()#
ggplot(tbl3.m, aes(pos, value)) + geom_point(aes(color=variable),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands.m, aes(x=pos, y=value), shape=5)+geom_text_repel(data=tbl3.cands.m, aes(x=pos, y=value, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=1, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
?loess
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=1, span=0.2)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=1, span=0.1)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=1, span=0.05)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=1, span=0.05)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=1, span=0.05)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=1, span=0.05)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=1, span=0.05, parametric=T)})
mntn1=droplevels(mntn[((mntn$ref=="C"&mntn$alt=="T")|(mntn$ref=="G"&mntn$alt=="A"))&(mntn$chr!="Mt")&(mntn$chr!="Pt"),])
wt=mntn1$wt.ref/(mntn1$wt.ref+mntn1$wt.alt)#
mut=mntn1$mut.ref/(mntn1$mut.ref+mntn1$mut.alt)#
ratio=wt-mut#
#
tbl1=data.frame(At_num=mntn1$At_num, gene=mntn1$gene, chr=mntn1$chr, pos=mntn1$pos, mut.ref=mntn1$mut.ref, mut.alt=mntn1$mut.alt, wt.ref=mntn1$wt.ref, wt.alt=mntn1$wt.alt, mut.ratio=mut, wt.ratio=wt, ratio)#
tbl1=tbl1[complete.cases(tbl1),]#
#
#tbl1.cands=tbl1[(tbl1[,3] %in% cnds[,1]) & (tbl1[,4] %in% cnds[,2]),]#
breaks=seq(0, max(tbl1$pos), round(max(tbl1$pos)/3, digits=-7))#
#
##########################################################################
#separated chromosomes original data; after filtering (tbl2)-LOESS fitted#
#removing ratios below 0.1#
##########################################################################
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=1, span=0.05, parametric=T)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=1, span=0.05, parametric=T)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
mntn1=droplevels(mntn[(mntn$chr!="Mt")|(mntn$chr!="Pt"),])#
mntn1=droplevels(mntn[((mntn$ref=="C"&mntn$alt=="T")|(mntn$ref=="G"&mntn$alt=="A"))&(mntn$chr!="Mt")&(mntn$chr!="Pt"),])
wt=mntn1$wt.ref/(mntn1$wt.ref+mntn1$wt.alt)#
mut=mntn1$mut.ref/(mntn1$mut.ref+mntn1$mut.alt)#
ratio=wt-mut#
#
tbl1=data.frame(At_num=mntn1$At_num, gene=mntn1$gene, chr=mntn1$chr, pos=mntn1$pos, mut.ref=mntn1$mut.ref, mut.alt=mntn1$mut.alt, wt.ref=mntn1$wt.ref, wt.alt=mntn1$wt.alt, mut.ratio=mut, wt.ratio=wt, ratio)#
tbl1=tbl1[complete.cases(tbl1),]#
#
#tbl1.cands=tbl1[(tbl1[,3] %in% cnds[,1]) & (tbl1[,4] %in% cnds[,2]),]#
breaks=seq(0, max(tbl1$pos), round(max(tbl1$pos)/3, digits=-7))#
#
##########################################################################
#separated chromosomes original data; after filtering (tbl2)-LOESS fitted#
#removing ratios below 0.1#
##########################################################################
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=1, span=0.05, parametric=T)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
mntn=read.delim("/Users/guywachsman/Guy/EMS1/pipeline/M2_300/M2_300.plot4.txt", header=T)
mntn1=droplevels(mntn[(mntn$chr!="Mt")|(mntn$chr!="Pt"),])
dim(mntn1)
mntn1=droplevels(mntn[((mntn$ref=="C"&mntn$alt=="T")|(mntn$ref=="G"&mntn$alt=="A"))&(mntn$chr!="Mt")&(mntn$chr!="Pt"),])
dim(mntn1)
wt=mntn1$wt.ref/(mntn1$wt.ref+mntn1$wt.alt)#
mut=mntn1$mut.ref/(mntn1$mut.ref+mntn1$mut.alt)#
ratio=wt-mut#
#
tbl1=data.frame(At_num=mntn1$At_num, gene=mntn1$gene, chr=mntn1$chr, pos=mntn1$pos, mut.ref=mntn1$mut.ref, mut.alt=mntn1$mut.alt, wt.ref=mntn1$wt.ref, wt.alt=mntn1$wt.alt, mut.ratio=mut, wt.ratio=wt, ratio)#
tbl1=tbl1[complete.cases(tbl1),]#
#
#tbl1.cands=tbl1[(tbl1[,3] %in% cnds[,1]) & (tbl1[,4] %in% cnds[,2]),]#
breaks=seq(0, max(tbl1$pos), round(max(tbl1$pos)/3, digits=-7))#
#
##########################################################################
#separated chromosomes original data; after filtering (tbl2)-LOESS fitted#
#removing ratios below 0.1#
##########################################################################
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=1, span=0.05, parametric=T)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=1, span=0.05, parametric=T)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3, parametric=T)})
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3, parametric=T)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
mntn1=droplevels(mntn[(mntn$chr!="Mt")|(mntn$chr!="Pt"),])
wt=mntn1$wt.ref/(mntn1$wt.ref+mntn1$wt.alt)#
mut=mntn1$mut.ref/(mntn1$mut.ref+mntn1$mut.alt)#
ratio=wt-mut#
#
tbl1=data.frame(At_num=mntn1$At_num, gene=mntn1$gene, chr=mntn1$chr, pos=mntn1$pos, mut.ref=mntn1$mut.ref, mut.alt=mntn1$mut.alt, wt.ref=mntn1$wt.ref, wt.alt=mntn1$wt.alt, mut.ratio=mut, wt.ratio=wt, ratio)#
tbl1=tbl1[complete.cases(tbl1),]#
#
#tbl1.cands=tbl1[(tbl1[,3] %in% cnds[,1]) & (tbl1[,4] %in% cnds[,2]),]#
breaks=seq(0, max(tbl1$pos), round(max(tbl1$pos)/3, digits=-7))#
#
##########################################################################
#separated chromosomes original data; after filtering (tbl2)-LOESS fitted#
#removing ratios below 0.1#
##########################################################################
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
mntn=read.delim("/Users/guywachsman/Guy/EMS1/pipeline/M2_300/EMS.plot4.txt", header=T)
cnds=read.delim("/Users/guywachsman/Guy/EMS1/pipeline/M2_300/EMS.cands4.txt", header =T, sep = "\t")
mntn1=droplevels(mntn[((mntn$ref=="C"&mntn$alt=="T")|(mntn$ref=="G"&mntn$alt=="A"))&(mntn$chr!="Mt")&(mntn$chr!="Pt"),])
wt=mntn1$wt.ref/(mntn1$wt.ref+mntn1$wt.alt)#
mut=mntn1$mut.ref/(mntn1$mut.ref+mntn1$mut.alt)#
ratio=wt-mut#
#
tbl1=data.frame(At_num=mntn1$At_num, gene=mntn1$gene, chr=mntn1$chr, pos=mntn1$pos, mut.ref=mntn1$mut.ref, mut.alt=mntn1$mut.alt, wt.ref=mntn1$wt.ref, wt.alt=mntn1$wt.alt, mut.ratio=mut, wt.ratio=wt, ratio)#
tbl1=tbl1[complete.cases(tbl1),]#
#
#tbl1.cands=tbl1[(tbl1[,3] %in% cnds[,1]) & (tbl1[,4] %in% cnds[,2]),]#
breaks=seq(0, max(tbl1$pos), round(max(tbl1$pos)/3, digits=-7))#
#
##########################################################################
#separated chromosomes original data; after filtering (tbl2)-LOESS fitted#
#removing ratios below 0.1#
##########################################################################
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.1),]#
#
head(tbl2)#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
mntn=read.delim("/Users/guywachsman/Guy/EMS1/pipeline/M2_300/EMS.plot4.txt", header=T)#
cnds=read.delim("/Users/guywachsman/Guy/EMS1/pipeline/M2_300/EMS.cands4.txt", header =T, sep = "\t")
mntn1=droplevels(mntn[(mntn$chr!="Mt")|(mntn$chr!="Pt"),])
wt=mntn1$wt.ref/(mntn1$wt.ref+mntn1$wt.alt)#
mut=mntn1$mut.ref/(mntn1$mut.ref+mntn1$mut.alt)#
ratio=wt-mut#
#
tbl1=data.frame(At_num=mntn1$At_num, gene=mntn1$gene, chr=mntn1$chr, pos=mntn1$pos, mut.ref=mntn1$mut.ref, mut.alt=mntn1$mut.alt, wt.ref=mntn1$wt.ref, wt.alt=mntn1$wt.alt, mut.ratio=mut, wt.ratio=wt, ratio)#
tbl1=tbl1[complete.cases(tbl1),]#
#
#tbl1.cands=tbl1[(tbl1[,3] %in% cnds[,1]) & (tbl1[,4] %in% cnds[,2]),]#
breaks=seq(0, max(tbl1$pos), round(max(tbl1$pos)/3, digits=-7))#
#
##########################################################################
#separated chromosomes original data; after filtering (tbl2)-LOESS fitted#
#removing ratios below 0.3#
##########################################################################
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
tbl2=tbl1[(tbl1[,11]>0.3),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]#
#
?loess#
#
#making the x-axes labels less messy#
fancy_scientific <- function(l) {#
     # turn in to character string in scientific notation#
     l <- format(l, scientific = TRUE)#
     l <- gsub("0e\\+00","0",l)#
     # quote the part before the exponent to keep all the digits#
     l <- gsub("^(.*)e", "'\\1'e", l)#
     # turn the 'e+' into plotmath format#
     l <- gsub("e\\+","e",l)#
     l <- gsub("e", "%*%10^", l)#
     l <- gsub("\\'1[\\.0]*\\'\\%\\*\\%", "", l)#
     l <- gsub("\\.0", "", l)#
     #l <- gsub("\\'[\\.0]'", "", l)#
     # return this as an expression#
     parse(text=l)#
}#
?loess#
#getting the loess fitted plot#
x11()#
ggplot(tbl3, aes(pos, fitted)) + geom_point(aes(color=chr),size=0.3)+ facet_grid (.~ chr, scales = "free_x", space = "free_x")+geom_point(data=tbl3.cands, aes(x=pos, y=fitted), shape=5)+geom_text_repel(data=tbl3.cands, aes(x=pos, y=fitted, label=gene), size=3)+theme(legend.position="none")+scale_x_continuous(breaks=breaks, labels=fancy_scientific)+labs(x="position", y="ratio")
getwd()
getwd("/Users/guywachsman/Guy/EMS1/pipeline/SIMPLE/Simple")
setwd("/Users/guywachsman/Guy/EMS1/pipeline/SIMPLE/Simple")
setwd("./output")#
library("ggplot2")#
library("ggrepel")#
library("reshape2")
args <- commandArgs(trailingOnly=TRUE)#
line <- args[1]#
plotfilename <- paste(line, ".allSNPs.txt", sep="")#
candidatefilename <- paste(line, ".candidates.txt", sep="")
line
line=EMS
line="EMS"
args <- commandArgs(trailingOnly=TRUE)#
line <- args[1]#
plotfilename <- paste(line, ".allSNPs.txt", sep="")#
candidatefilename <- paste(line, ".candidates.txt", sep="")
plotfilename
line
line=c("EMS")
line
setwd("./output")
setwd("/Users/guywachsman/Guy/EMS1/pipeline/SIMPLE/Simple")
setwd("./output")
args <- commandArgs(trailingOnly=TRUE)
args
line <- args[1]
line
line=c("EMS")
line
plotfilename <- paste(line, ".allSNPs.txt", sep="")#
candidatefilename <- paste(line, ".candidates.txt", sep="")
plotfilename
candidatefilename
mntn=read.delim(plotfilename, header=T)#In my previous version of R, but NOT on the bioross server, R adds an extra NA column#
cnds=read.delim(candidatefilename, header =T, sep = "\t")#
#
mntn1=droplevels(mntn[(mntn$chr!="Mt")|(mntn$chr!="Pt"),])#
#mntn1=droplevels(mntn[((mntn$ref=="C"&mntn$alt=="T")|(mntn$ref=="G"&mntn$alt=="A"))&(mntn$chr!="Mt")&(mntn$chr!="Pt"),])#
#
# tbl1[tbl1[,1]=="AT3G28550",]#
# head(mntn)#
#
wt=mntn1$wt.ref/(mntn1$wt.ref+mntn1$wt.alt)#
mut=mntn1$mut.ref/(mntn1$mut.ref+mntn1$mut.alt)#
ratio=wt-mut
tbl1=data.frame(At_num=mntn1$At_num, gene=mntn1$gene, chr=mntn1$chr, pos=mntn1$pos, mut.ref=mntn1$mut.ref, mut.alt=mntn1$mut.alt, wt.ref=mntn1$wt.ref, wt.alt=mntn1$wt.alt, mut.ratio=mut, wt.ratio=wt, ratio)#
tbl1=tbl1[complete.cases(tbl1),]#
#
#tbl1.cands=tbl1[(tbl1[,3] %in% cnds[,1]) & (tbl1[,4] %in% cnds[,2]),]#
breaks=seq(0, max(tbl1$pos), round(max(tbl1$pos)/3, digits=-7))
tbl2=tbl1[(tbl1[,11]>0.1),]#
t2_s=split(tbl2, tbl2$chr)#
lll=lapply(t2_s, function(x) {loess(x$ratio~x$pos, degree=2, span=0.3)})#
mmm=lapply(lll, '[[', 'fitted')#
fitted=Reduce(c, mmm)#
tbl3=data.frame(tbl2, fitted)#
tbl3.cands=tbl3[(tbl3[,3] %in% cnds[,1]) & (tbl3[,4] %in% cnds[,2]),]
?loess
head(t2_s)
mntn1
mntn1$chr
# tail(mntn1)
tail(mntn1)
mntn=read.delim(plotfilename, header=T)#In my previous version of R, but NOT on the bioross server, R adds an extra NA column#
cnds=read.delim(candidatefilename, header =T, sep = "\t")
# tail(mntn1)
tail(mntn1)
# tail(mntn)
tail(mntn)
mntn1=droplevels(mntn[(mntn$chr!="Mt")&(mntn$chr!="Pt"),])
tail(mntn)
plotfilename
candidatefilename
cnds
mntn1=droplevels(mntn[(mntn$chr!="Mt")|(mntn$chr!="Pt"),])
tail(mntn1
tail(mntn1)
?commandArgs
